(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{214:function(t,r,e){"use strict";e.r(r);var a=e(7),n=Object(a.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"面向接口编程有哪些复杂度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面向接口编程有哪些复杂度","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向接口编程有哪些复杂度")]),t._v(" "),e("h2",{attrs:{id:"我的理解点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我的理解点","aria-hidden":"true"}},[t._v("#")]),t._v(" 我的理解点")]),t._v(" "),e("ul",[e("li",[t._v("面向接口编程也可以叫作面向规定协议编程")]),t._v(" "),e("li",[t._v("面向接口编程是一种解决问题的很好方式，但是当设计和分离是一个人的时候，就显得非常没有必要")]),t._v(" "),e("li",[t._v("接口设计好了就可以不用改动，通过多种不同的实现类去做不同的变换")]),t._v(" "),e("li",[t._v("接口设计是设计者对整个业务的理解，理解越透彻，接口设计越好")]),t._v(" "),e("li",[t._v("面向对象专注于高内聚，面向接口专注于低耦合")]),t._v(" "),e("li",[t._v("面向接口会增加了设计的复杂度，不佳的接口的设计会对所有使用接口的层都有影响，并且并不是所有的程序的都需要使用接口，接口只有在系统的复杂性达到一定程度才能体现出它的优势，否则只是纯粹的增加工作量，当然选择接口是不会错的，这需要自己的衡量")])]),t._v(" "),e("h1",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/c1cf235f016a",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈面向接口编程"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.javazhiyin.com/21432.html#m",target:"_blank",rel:"noopener noreferrer"}},[t._v("那些年搞不懂的高深术语——依赖倒置•控制反转•依赖注入•面向接口编程"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/wantken/article/details/31763669",target:"_blank",rel:"noopener noreferrer"}},[t._v("面向接口编程优缺点"),e("OutboundLink")],1)])])])},[],!1,null,null,null);r.default=n.exports}}]);